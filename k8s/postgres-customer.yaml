apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: customer-db-pvc
  namespace: prod
spec:
  accessModes: ["ReadWriteOnce"]
  resources: { requests: { storage: 2Gi } }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-db
  namespace: prod
  labels: { app: customer-db }
spec:
  replicas: 1
  selector: { matchLabels: { app: customer-db } }
  template:
    metadata: { labels: { app: customer-db } }
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          ports: [{ containerPort: 5432 }]
          env:
            - { name: POSTGRES_DB, valueFrom: { configMapKeyRef: { name: app-config, key: CUSTOMERS_DB_NAME } } }
            - { name: POSTGRES_USER, valueFrom: { secretKeyRef: { name: db-credentials, key: POSTGRES_USER } } }
            - { name: POSTGRES_PASSWORD, valueFrom: { secretKeyRef: { name: db-credentials, key: POSTGRES_PASSWORD } } }
          volumeMounts:
            - { name: data, mountPath: /var/lib/postgresql/data }
          readinessProbe:
            exec: { command: ["pg_isready","-U","postgres","-d","customers"] }
            initialDelaySeconds: 5
      volumes:
        - name: data
          persistentVolumeClaim: { claimName: customer-db-pvc }
---
apiVersion: v1
kind: Service
metadata:
  name: customer-db
  namespace: prod
spec:
  selector: { app: customer-db }
  ports: [{ name: pg, port: 5432, targetPort: 5432 }]
  type: ClusterIP
