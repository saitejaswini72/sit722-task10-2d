apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-deploy
  namespace: prod
spec:
  replicas: 1
  selector: { matchLabels: { app: order } }
  template:
    metadata: { labels: { app: order } }
    spec:
      containers:
        - name: order
          image: YOUR_ACR_NAME.azurecr.io/order_service:latest
          ports: [{ containerPort: 8000 }]
          env:
            - { name: POSTGRES_HOST, value: order-db }
            - { name: POSTGRES_DB,   valueFrom: { configMapKeyRef: { name: app-config, key: ORDERS_DB_NAME } } }
            - { name: POSTGRES_USER, valueFrom: { secretKeyRef: { name: db-credentials, key: POSTGRES_USER } } }
            - { name: POSTGRES_PASSWORD, valueFrom: { secretKeyRef: { name: db-credentials, key: POSTGRES_PASSWORD } } }
            - { name: PRODUCT_SERVICE_URL, value: http://product-svc:8000 }
            - { name: AMQP_URL, value: amqp://guest:guest@rabbitmq:5672/ }
          readinessProbe: { httpGet: { path: /health, port: 8000 } }
          livenessProbe:  { httpGet: { path: /health, port: 8000 } }
---
apiVersion: v1
kind: Service
metadata:
  name: order-svc
  namespace: prod
spec:
  selector: { app: order }
  ports: [{ name: http, port: 8000, targetPort: 8000 }]
  type: ClusterIP
